(base) mjgp@alpha:~/ExamplePDBs/6NEF$ python3 BioDC.py 

 ================================================================== 
                      Weclome to BioDC
           A program that automates and accelerates
             the computation of redox currents in
              (polymeric) multi-heme cytochormes 

            Written by Matthew J. Guberman-Pfeffer
                Last Updated: 05/28/2023

 This research was supported by the National Institute of General 
 Medical Sciences of the National Institutes of Health under award
 1F32GM142247-01A1.
 ================================================================== 

 BioDC presents a highly modular workflow that has three 
 large divisions: 
    (1) Structure Preparaiton & Relaxation
    (2) Energetic Estimation
    (3) Redox Current Prediction
 
 Which of these divisions would you like to perform?
 (Enter zero "0" to be guided through the entire
 workflow.) (0/1/2/3) 0

 ===================================================================  
 First: Structure Preparation & Relaxation
 ===================================================================  
     
 This program requires VMD and the AmberTools package to be 
 in your system's PATH variable. Are they? (yes/no)? y
 
 Good! Now, here are the PDBs in the present direcotry:

Prepare6NEF.pdb
6NEF_Creres.pdb
6NEF_trimer.pdb
6NEF_2.pdb
6NEF_C.pdb
6NEF_5.pdb
6NEF_Areres.pdb
6NEF_B.pdb
6NEF_7.pdb
6NEF_Dreres.pdb
HEC.pdb
6NEF_trimer_reord.pdb
6NEF_A.pdb
6NEF_1.pdb
6NEF.pdb
6NEF_3.pdb
prot.pdb
6NEF_preped.pdb
6NEF_4.pdb
6NEF_D.pdb
6NEF_8.pdb
6NEF_Breres.pdb
6NEF_6.pdb
6NEF_9.pdb

 Which PDB would you like to setup 
 (omit the .pdb file extension)? 6NEF_preped
 That PDB was found! 

 We need to create a file (ResIndexing.txt) that identifies 
 the IDs of the Cys and His residues bound to the heme macrocycle.
 Would you like to create it automatically or manually (auto/man)? auto

 The automated creation of ResIndexing.txt has two parts:
   1) Writting CreateResIndexing.tcl 
   2) Submitting the TCL script to Visual Molecular Dynamics (VMD)

 The TCL script identifies the Cys and His residues within a 
 distance cutoff of each heme group and assumes that the residues 
 found within that cutoff are bonded to that heme.

 What distance threshold would you liek to use? 
 (recommended = 2.5 angstroms)                  3.3

 Please make sure that the correct residues are identified by, 
 for example, creating representations in VMD with the residue IDs 
 givenon each line of the ResIndexing.txt file. 

 If the wrong residues are identified, the setup later with TLEaP 
 will fail because the bond definitions will be wrong. In this case, 
 please correct the residue IDs and save the changes to 
 CorrectedResIndexing.txt. When you re-run this python scirpt, the
 CorrectedResIndexing.txt file will be detected and used to replace
 ResIndexing.txt. 
                
rlwrap: Command not found.

 Your ResIndexing file will now be used with VMD
 to create the HEH, HIO, and CYO residues.
 
 We will write and submit a script called SetupStructure.tcl to 
 perform this magic.

 CAUTION: The magic of the script is only as good as the information 
 in ResIndexing.txt. If the wrong residue IDs are specified, 
 everything from hereon out will be, put politely, junk!
      
 Shall we venture forward with SetupStructure.tcl (yes/no)? y
rlwrap: Command not found.

 VMD finished. Please check SetupStructure.log for any erros. You may 
 also want to inspect the generated PDBs for the protein,each heme, 
 and each heme propionic acid group.
             
 Now, we need to stitch the edited PDBs of the protein, hemes, 
 and heme propionic acid groups into a single PDB. Then, this 
 re-constructed PDB of the multi-heme protein will be processed
 with TLEaP of the AmberTools package to generate topology and 
 coordinate files.
      
 Prefix for output parm/rst7 6NEF
 Should the structure be prepared with 
 an explicit or implicit solvent (explicit/implicit)? e
  Using a rectangular or an octahedral box (rec/octahed)? rec
  With how much of a solvent buffer (in angstroms)? 15
  And how many Na+ ions; 0 = enough for charge neutrality? 0
  And how many Cl- ions; 0 = enough for charge neutrality? 0

 The re-compiled structure will now be processed with TLEaP.
     
 TLEaP finished! 
 Please inspect the structure to make sure it is correct.
    
 Found 6NEF.prmtop and 6NEF.rst7
 Preparing to relax the geometry
 Running minimization ...
 Minimization finished!

 ===================================================================  
 Second: Energetic Estimation
 ===================================================================


 Is your structure polymeric (yes/no)? y

 The structure preparation stage required you to place all the heme
 residues from all the chains at the end of the PDB with sequential
 numbering. The programs in AmberTools that will be used to estimate 
 the charge transfer energetics want instead the residues to come in 
 the order of the connectiviity; that is, the hemes of chain A should 
 come both any residue in chain B. 

 To oblige this different numbering convention, we'll use the 
 CPPTRAJ of the AmberTools package to re-order the residues. 
 This process will write a new topology and coordinate file, 
 where the latter is of the structure you previously minimized.

 To compute the energetics for heme-to-heme electron transfer. We 
 need to know the linear sequence of hemes that will serve as 
 charge hopping sites. Typically the linear sequence is NOT the 
 sequence of residue IDs in the PDB. We therefore need to specify
 the linear sequence to compute the right electron transfer steps. 
    
 Linear Sequence: 1260 1263 1266 1269 1272 1275 1242
 ------------------------------------------------------------------- 

 Should we compute the reorganization energy (yes/no)? y
 Found 6NEF_reord.prmtop and min.rst7

 To estimate the reorganization energy (lambda) from the 
 solvent accessible surface area, two steps will be take:
    (1) Convert min.rst7 to a PDB-formatted file using ambpdb 
        Note: This step is skipped because you indicated you 
        have a polymeric structute, When the topology was
        re-ordered to conform to AMBER conventions for 
        multi-chain structures, min.pdb was already 
        created.
             
    (2) Write and submit a TCL script to VMD
        
 Now using VMD to compute SASA Donor = 1260 & Acceptor = 1263...
rlwrap: Command not found.
 Now using VMD to compute SASA Donor = 1263 & Acceptor = 1266...
rlwrap: Command not found.
 Now using VMD to compute SASA Donor = 1266 & Acceptor = 1269...
rlwrap: Command not found.
 Now using VMD to compute SASA Donor = 1269 & Acceptor = 1272...
rlwrap: Command not found.
 Now using VMD to compute SASA Donor = 1272 & Acceptor = 1275...
rlwrap: Command not found.
 Now using VMD to compute SASA Donor = 1275 & Acceptor = 1242...
rlwrap: Command not found.
 Computing Reorganization Energy from Solvent Accessibility...
 Done!
 ------------------------------------------------------------------- 

 Should we compute the reaction free energy (yes/no)? y

 Two different methods are implemented to estimate heme redox 
 potentials and thereby reaction free energies when an explict
 solvent is presnet:

    (1) Compute the change in electrostatic interaciton energy upon 
        heme oxidaiton using the Linear Interaction Energy method 
        in CPPTRAJ.

    (2) Compute the change in electrostatic interaciton energy upon 
        heme oxidaiton using the Poissonâ€“Boltzmann Surface Area
        method implemented in AmberTools (essentially a Delphi-type
        calculation). In this case, the explicit solvent 
        prepared with the sturcutre is discarded.

    Note that method #1 has two advantages:
        (1) It is considerably faster than method #2

        (2) The overall change in electorstatic energy is decomposed
            into contributions from different groups of residues.
                
 Should we use the LIE or PBSA method (lie/pbsa)? pbsa

 Generating topology for oHEH-1260 ...

 Generating topology for rHEH-1260 ...

 Generating topology for oHEH-1263 ...

 Generating topology for rHEH-1263 ...

 Generating topology for oHEH-1266 ...

 Generating topology for rHEH-1266 ...

 Generating topology for oHEH-1269 ...

 Generating topology for rHEH-1269 ...

 Generating topology for oHEH-1272 ...

 Generating topology for rHEH-1272 ...

 Generating topology for oHEH-1275 ...

 Generating topology for rHEH-1275 ...

 Generating topology for oHEH-1242 ...

 Generating topology for rHEH-1242 ...

 Submitting 14 PBSA calculations in parallel
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_o1260 -p o1260.prmt...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_r1260 -p r1260.prmt...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_o1263 -p o1263.prmt...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_r1263 -p r1263.prmt...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_o1266 -p o1266.prmt...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_r1266 -p r1266.prmt...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_o1269 -p o1269.prmt...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_r1269 -p r1269.prmt...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_o1272 -p o1272.prmt...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_r1272 -p r1272.prmt...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_o1275 -p o1275.prmt...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_r1275 -p r1275.prmt...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_o1242 -p o1242.prmt...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_r1242 -p r1242.prmt...>

 Result:
  step=0 HEH-1260 EtotOx=-1075.453 eV EtotRed=-1075.150 eV DEtot=-0.303 eV EelecOx=-746.866 eV EelecRed=-744.527 eV DEelec=-2.339 eV
  step=1 HEH-1263 EtotOx=-1075.453 eV EtotRed=-1075.301 eV DEtot=-0.153 eV EelecOx=-746.866 eV EelecRed=-744.734 eV DEelec=-2.132 eV
  step=2 HEH-1266 EtotOx=-1075.453 eV EtotRed=-1075.290 eV DEtot=-0.163 eV EelecOx=-746.866 eV EelecRed=-744.629 eV DEelec=-2.237 eV
  step=3 HEH-1269 EtotOx=-1075.453 eV EtotRed=-1075.164 eV DEtot=-0.289 eV EelecOx=-746.866 eV EelecRed=-744.294 eV DEelec=-2.572 eV
  step=4 HEH-1272 EtotOx=-1075.453 eV EtotRed=-1075.128 eV DEtot=-0.325 eV EelecOx=-746.866 eV EelecRed=-744.259 eV DEelec=-2.607 eV
  step=5 HEH-1275 EtotOx=-1075.453 eV EtotRed=-1075.110 eV DEtot=-0.344 eV EelecOx=-746.866 eV EelecRed=-744.456 eV DEelec=-2.410 eV
  step=6 HEH-1242 EtotOx=-1075.453 eV EtotRed=-1075.149 eV DEtot=-0.305 eV EelecOx=-746.866 eV EelecRed=-744.436 eV DEelec=-2.430 eV
 ------------------------------------------------------------------- 

 Should we estimate the electronic coupling from the geometry (yes/no)? y

 Assiging coupling values based on inter-macrocycle planar anlge ... 
 Done!
 ------------------------------------------------------------------- 

 Should we compute the non-adiabatic Marcus-theory rates (yes/no)? y

 Step #0:
    Activation Energy:
        Forward: 2.233E-01 eV
        Reverse: 3.738E-01 eV
    Rates:
        Forward: 1.096E+07 
        Reverse: 3.246E+04
 
 Step #1:
    Activation Energy:
        Forward: 2.915E-01 eV
        Reverse: 2.810E-01 eV
    Rates:
        Forward: 1.267E+07 
        Reverse: 1.904E+07
 
 Step #2:
    Activation Energy:
        Forward: 3.318E-01 eV
        Reverse: 2.055E-01 eV
    Rates:
        Forward: 1.739E+05 
        Reverse: 2.300E+07
 
 Step #3:
    Activation Energy:
        Forward: 2.816E-01 eV
        Reverse: 2.461E-01 eV
    Rates:
        Forward: 1.944E+07 
        Reverse: 7.652E+07
 
 Step #4:
    Activation Energy:
        Forward: 2.775E-01 eV
        Reverse: 2.587E-01 eV
    Rates:
        Forward: 1.410E+06 
        Reverse: 2.919E+06
 
 Step #5:
    Activation Energy:
        Forward: 2.492E-01 eV
        Reverse: 2.882E-01 eV
    Rates:
        Forward: 6.734E+07 
        Reverse: 1.492E+07
 
 ===================================================================  
 Third: Redox Current Prediction
 ===================================================================  
     
 This division of the BioDC workflow computes, via the analytical
 Derrida formula, the charge diffuction coefficient based on the 
 non-adiabatic Marcus theory rates. The diffusion coefficient is
 then related to the electrical resistance and used in Ohm's law
 to compute the current as a function of applied bias. Note that 
 this approach is only rigorously correct in the limit of zero
 bias.
     
 Found rates.txt, which is needed to proceed!

 We will now compile and run a C-program kindly provided by
 Dr. Fredrik Jansson that has been modified only to 
 interface I/O operations with the BioDC program
make: Nothing to be done for 'all'.
The are 6 electron transfer steps 
1.096000E+07 1.492308E+07
1.267000E+07 3.246084E+04
1.739000E+05 1.904395E+07
1.944000E+07 2.300056E+07
1.410000E+06 7.652181E+07
6.734000E+07 2.918543E+06
V: 1380.424195
D: 3.383040e-10

 Found D.txt, which is needed to proceed!
 We will at last compute the redox current. 
 To do this, some system-specific information is needed.
        
 Please provide the following parmaeters: 
  Temperature (K)? 300
  Number of Charges per subunit? 3
rlwrap: Command not found.
 
 The length of a subunit of the cytochrome polymer is needed.
  The subunit length measured between the first and the last heme
  specified in LinearizedHemeSequence.txt is 4.85E-07 

  Length of wire (cm)? 3E-5
  Experimental Conductance (S/cm) ? 
   (Enter "0" if not known)         2.67E-10

 Charge per Subunit Length          = 6.179513e+06 q/cm 
 Cross-Sectional Area               = 1.767146e-14 cm^2
 Charge Density                     = 3.496889e+20 q/cm^2
 Experimental Diffusion Constant    = 2.090998e-04 cm^2/s
 Computed Diffusion Constant        = 3.383040e-10 cm^2/s
    
 Voltage (V) Exp. Current (pA) Computed Current (pA)
      -0.500          -133.500            -2.160E-04
      -0.450          -120.150            -1.944E-04
      -0.400          -106.800            -1.728E-04
      -0.350           -93.450            -1.512E-04
      -0.300           -80.100            -1.296E-04
      -0.250           -66.750            -1.080E-04
      -0.200           -53.400            -8.640E-05
      -0.150           -40.050            -6.480E-05
      -0.100           -26.700            -4.320E-05
      -0.050           -13.350            -2.160E-05
      -0.000            -0.000            -4.796E-20
       0.050            13.350             2.160E-05
       0.100            26.700             4.320E-05
       0.150            40.050             6.480E-05
       0.200            53.400             8.640E-05
       0.250            66.750             1.080E-04
       0.300            80.100             1.296E-04
       0.350            93.450             1.512E-04
       0.400           106.800             1.728E-04
       0.450           120.150             1.944E-04
 Done!
(base) mjgp@alpha:~/ExamplePDBs/6NEF$ 

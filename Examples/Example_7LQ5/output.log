(base) mjgp@alpha:~/ExamplePDBs/7LQ5$ time python3 BioDC.py 

 ================================================================== 
                      Weclome to BioDC
           A program that automates and accelerates
             the computation of redox currents in
              (polymeric) multi-heme cytochormes 

            Written by Matthew J. Guberman-Pfeffer
                Last Updated: 05/28/2023

 This research was supported by the National Institute of General 
 Medical Sciences of the National Institutes of Health under award
 1F32GM142247-01A1.
 ================================================================== 

 BioDC presents a highly modular workflow that has three 
 large divisions: 
    (1) Structure Preparaiton & Relaxation
    (2) Energetic Estimation
    (3) Redox Current Prediction
 
 Which of these divisions would you like to perform?
 (Enter zero "0" to be guided through the entire
 workflow.) (0/1/2/3) 0

 ===================================================================  
 First: Structure Preparation & Relaxation
 ===================================================================  
     
 This program requires VMD and the AmberTools package to be 
 in your system's PATH variable. Are they? (yes/no)? y
 
 Good! Now, here are the PDBs in the present direcotry:

Prepare7LQ5.pdb
7LQ5_preped.pdb
7LQ5.pdb

 Which PDB would you like to setup 
 (omit the .pdb file extension)? 7LQ5_preped
 That PDB was found! 

 We need to create a file (ResIndexing.txt) that identifies 
 the IDs of the Cys and His residues bound to the heme macrocycle.
 Would you like to create it automatically or manually (auto/man)? auto

 The automated creation of ResIndexing.txt has two parts:
   1) Writting CreateResIndexing.tcl 
   2) Submitting the TCL script to Visual Molecular Dynamics (VMD)

 The TCL script identifies the Cys and His residues within a 
 distance cutoff of each heme group and assumes that the residues 
 found within that cutoff are bonded to that heme.

 What distance threshold would you liek to use? 
 (recommended = 2.5 angstroms)                  2.5

 Please make sure that the correct residues are identified by, 
 for example, creating representations in VMD with the residue IDs 
 givenon each line of the ResIndexing.txt file. 

 If the wrong residues are identified, the setup later with TLEaP 
 will fail because the bond definitions will be wrong. In this case, 
 please correct the residue IDs and save the changes to 
 CorrectedResIndexing.txt. When you re-run this python scirpt, the
 CorrectedResIndexing.txt file will be detected and used to replace
 ResIndexing.txt. 
                
rlwrap: Command not found.

 Your ResIndexing file will now be used with VMD
 to create the HEH, HIO, and CYO residues.
 
 We will write and submit a script called SetupStructure.tcl to 
 perform this magic.

 CAUTION: The magic of the script is only as good as the information 
 in ResIndexing.txt. If the wrong residue IDs are specified, 
 everything from hereon out will be, put politely, junk!
      
 Shall we venture forward with SetupStructure.tcl (yes/no)? y
rlwrap: Command not found.

 VMD finished. Please check SetupStructure.log for any erros. You may 
 also want to inspect the generated PDBs for the protein,each heme, 
 and each heme propionic acid group.
             
 Now, we need to stitch the edited PDBs of the protein, hemes, 
 and heme propionic acid groups into a single PDB. Then, this 
 re-constructed PDB of the multi-heme protein will be processed
 with TLEaP of the AmberTools package to generate topology and 
 coordinate files.
      
 Prefix for output parm/rst7 7LQ5
 Should the structure be prepared with 
 an explicit or implicit solvent (explicit/implicit)? e
  Using a rectangular or an octahedral box (rec/octahed)? rec
  With how much of a solvent buffer (in angstroms)? 15
  And how many Na+ ions; 0 = enough for charge neutrality? 0
  And how many Cl- ions; 0 = enough for charge neutrality? 0

 The re-compiled structure will now be processed with TLEaP.
     
 TLEaP finished! 
 Please inspect the structure to make sure it is correct.
    
 Found 7LQ5.prmtop and 7LQ5.rst7
 Preparing to relax the geometry
 Running minimization ...
 Minimization finished!

 ===================================================================  
 Second: Energetic Estimation
 ===================================================================


 Is your structure polymeric (yes/no)? y

 The structure preparation stage required you to place all the heme
 residues from all the chains at the end of the PDB with sequential
 numbering. The programs in AmberTools that will be used to estimate 
 the charge transfer energetics want instead the residues to come in 
 the order of the connectiviity; that is, the hemes of chain A should 
 come both any residue in chain B. 

 To oblige this different numbering convention, we'll use the 
 CPPTRAJ of the AmberTools package to re-order the residues. 
 This process will write a new topology and coordinate file, 
 where the latter is of the structure you previously minimized.

 To compute the energetics for heme-to-heme electron transfer. We 
 need to know the linear sequence of hemes that will serve as 
 charge hopping sites. Typically the linear sequence is NOT the 
 sequence of residue IDs in the PDB. We therefore need to specify
 the linear sequence to compute the right electron transfer steps. 
    
 Linear Sequence: 562 553 559 550 541 547 544 844
 ------------------------------------------------------------------- 

 Should we compute the reorganization energy (yes/no)? y
 Found 7LQ5_reord.prmtop and min.rst7

 To estimate the reorganization energy (lambda) from the 
 solvent accessible surface area, two steps will be take:
    (1) Convert min.rst7 to a PDB-formatted file using ambpdb 
        Note: This step is skipped because you indicated you 
        have a polymeric structute, When the topology was
        re-ordered to conform to AMBER conventions for 
        multi-chain structures, min.pdb was already 
        created.
             
    (2) Write and submit a TCL script to VMD
        
 Now using VMD to compute SASA Donor = 562 & Acceptor = 553...
rlwrap: Command not found.
 Now using VMD to compute SASA Donor = 553 & Acceptor = 559...
rlwrap: Command not found.
 Now using VMD to compute SASA Donor = 559 & Acceptor = 550...
rlwrap: Command not found.
 Now using VMD to compute SASA Donor = 550 & Acceptor = 541...
rlwrap: Command not found.
 Now using VMD to compute SASA Donor = 541 & Acceptor = 547...
rlwrap: Command not found.
 Now using VMD to compute SASA Donor = 547 & Acceptor = 544...
rlwrap: Command not found.
 Now using VMD to compute SASA Donor = 544 & Acceptor = 844...
rlwrap: Command not found.
 Computing Reorganization Energy from Solvent Accessibility...
 Done!
 ------------------------------------------------------------------- 

 Should we compute the reaction free energy (yes/no)? y

 Two different methods are implemented to estimate heme redox 
 potentials and thereby reaction free energies when an explict
 solvent is presnet:

    (1) Compute the change in electrostatic interaciton energy upon 
        heme oxidaiton using the Linear Interaction Energy method 
        in CPPTRAJ.

    (2) Compute the change in electrostatic interaciton energy upon 
        heme oxidaiton using the Poissonâ€“Boltzmann Surface Area
        method implemented in AmberTools (essentially a Delphi-type
        calculation). In this case, the explicit solvent 
        prepared with the sturcutre is discarded.

    Note that method #1 has two advantages:
        (1) It is considerably faster than method #2

        (2) The overall change in electorstatic energy is decomposed
            into contributions from different groups of residues.
                
 Should we use the LIE or PBSA method (lie/pbsa)? pbsa

 Generating topology for oHEH-562 ...

 Generating topology for rHEH-562 ...

 Generating topology for oHEH-553 ...

 Generating topology for rHEH-553 ...

 Generating topology for oHEH-559 ...

 Generating topology for rHEH-559 ...

 Generating topology for oHEH-550 ...

 Generating topology for rHEH-550 ...

 Generating topology for oHEH-541 ...

 Generating topology for rHEH-541 ...

 Generating topology for oHEH-547 ...

 Generating topology for rHEH-547 ...

 Generating topology for oHEH-544 ...

 Generating topology for rHEH-544 ...

 Generating topology for oHEH-844 ...

 Generating topology for rHEH-844 ...

 Submitting 16 PBSA calculations in parallel
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_o562 -p o562.prmtop...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_r562 -p r562.prmtop...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_o553 -p o553.prmtop...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_r553 -p r553.prmtop...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_o559 -p o559.prmtop...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_r559 -p r559.prmtop...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_o550 -p o550.prmtop...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_r550 -p r550.prmtop...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_o541 -p o541.prmtop...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_r541 -p r541.prmtop...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_o547 -p o547.prmtop...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_r547 -p r547.prmtop...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_o544 -p o544.prmtop...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_r544 -p r544.prmtop...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_o844 -p o844.prmtop...>
  Finished: <Popen: returncode: 0 args: 'pbsa -O -i pbsa.key -o pbsa_r844 -p r844.prmtop...>

 Result:
  step=0 HEH-562 EtotOx=-679.478 eV EtotRed=-679.036 eV DEtot=-0.442 eV EelecOx=-415.955 eV EelecRed=-412.010 eV DEelec=-3.946 eV
  step=1 HEH-553 EtotOx=-679.478 eV EtotRed=-678.760 eV DEtot=-0.718 eV EelecOx=-415.955 eV EelecRed=-411.605 eV DEelec=-4.350 eV
  step=2 HEH-559 EtotOx=-679.478 eV EtotRed=-678.894 eV DEtot=-0.584 eV EelecOx=-415.955 eV EelecRed=-411.803 eV DEelec=-4.152 eV
  step=3 HEH-550 EtotOx=-679.478 eV EtotRed=-678.889 eV DEtot=-0.590 eV EelecOx=-415.955 eV EelecRed=-411.708 eV DEelec=-4.247 eV
  step=4 HEH-541 EtotOx=-679.478 eV EtotRed=-679.075 eV DEtot=-0.404 eV EelecOx=-415.955 eV EelecRed=-411.848 eV DEelec=-4.108 eV
  step=5 HEH-547 EtotOx=-679.478 eV EtotRed=-679.113 eV DEtot=-0.366 eV EelecOx=-415.955 eV EelecRed=-411.976 eV DEelec=-3.979 eV
  step=6 HEH-544 EtotOx=-679.478 eV EtotRed=-679.149 eV DEtot=-0.330 eV EelecOx=-415.955 eV EelecRed=-412.141 eV DEelec=-3.814 eV
  step=7 HEH-844 EtotOx=-679.478 eV EtotRed=-679.021 eV DEtot=-0.457 eV EelecOx=-415.955 eV EelecRed=-412.057 eV DEelec=-3.898 eV
 ------------------------------------------------------------------- 

 Should we estimate the electronic coupling from the geometry (yes/no)? y

 Assiging coupling values based on inter-macrocycle planar anlge ... 
 Done!
 ------------------------------------------------------------------- 

 Should we compute the non-adiabatic Marcus-theory rates (yes/no)? y

 Step #0:
    Activation Energy:
        Forward: 4.238E-01 eV
        Reverse: 1.476E-01 eV
    Rates:
        Forward: 4.914E+03 
        Reverse: 2.141E+08
 
 Step #1:
    Activation Energy:
        Forward: 2.014E-01 eV
        Reverse: 3.357E-01 eV
    Rates:
        Forward: 4.318E+08 
        Reverse: 2.387E+06
 
 Step #2:
    Activation Energy:
        Forward: 2.669E-01 eV
        Reverse: 2.613E-01 eV
    Rates:
        Forward: 3.424E+07 
        Reverse: 4.251E+07
 
 Step #3:
    Activation Energy:
        Forward: 2.146E-01 eV
        Reverse: 4.004E-01 eV
    Rates:
        Forward: 1.517E+07 
        Reverse: 1.148E+04
 
 Step #4:
    Activation Energy:
        Forward: 2.852E-01 eV
        Reverse: 3.232E-01 eV
    Rates:
        Forward: 1.574E+07 
        Reverse: 3.616E+06
 
 Step #5:
    Activation Energy:
        Forward: 2.569E-01 eV
        Reverse: 2.931E-01 eV
    Rates:
        Forward: 3.089E+06 
        Reverse: 7.601E+05
 
 Step #6:
    Activation Energy:
        Forward: 3.325E-01 eV
        Reverse: 2.049E-01 eV
    Rates:
        Forward: 2.704E+06 
        Reverse: 3.756E+08
 
 ===================================================================  
 Third: Redox Current Prediction
 ===================================================================  
     
 This division of the BioDC workflow computes, via the analytical
 Derrida formula, the charge diffuction coefficient based on the 
 non-adiabatic Marcus theory rates. The diffusion coefficient is
 then related to the electrical resistance and used in Ohm's law
 to compute the current as a function of applied bias. Note that 
 this approach is only rigorously correct in the limit of zero
 bias.
     
 Found rates.txt, which is needed to proceed!

 We will now compile and run a C-program kindly provided by
 Dr. Fredrik Jansson that has been modified only to 
 interface I/O operations with the BioDC program
cc -Wall -g -O3 -ffast-math  -march=native -fomit-frame-pointer -std=c99     derrida.c   -o derrida
The are 7 electron transfer steps 
4.914000E+03 3.756212E+08
4.318000E+08 2.141249E+08
3.424000E+07 2.387324E+06
1.517000E+07 4.251140E+07
1.574000E+07 1.148098E+04
3.089000E+06 3.615627E+06
2.704000E+06 7.601499E+05
V: 1581.870219
D: 4.943628e-11

 Found D.txt, which is needed to proceed!
 We will at last compute the redox current. 
 To do this, some system-specific information is needed.
        
 Please provide the following parmaeters: 
  Temperature (K)? 300
  Number of Charges per subunit? 4
rlwrap: Command not found.
 
 The length of a subunit of the cytochrome polymer is needed.
  The subunit length measured between the first and the last heme
  specified in LinearizedHemeSequence.txt is 5.86E-07 

  Length of wire (cm)? 3E-5
  Experimental Conductance (S/cm) ? 
   (Enter "0" if not known)         2.67E-7

 Charge per Subunit Length          = 6.821274e+06 q/cm 
 Cross-Sectional Area               = 1.767146e-14 cm^2
 Charge Density                     = 3.860051e+20 q/cm^2
 Experimental Diffusion Constant    = 1.894272e-01 cm^2/s
 Computed Diffusion Constant        = 4.943628e-11 cm^2/s
    
 Voltage (V) Exp. Current (pA) Computed Current (pA)
      -0.500       -133500.000            -3.484E-05
      -0.450       -120150.000            -3.136E-05
      -0.400       -106800.000            -2.787E-05
      -0.350        -93450.000            -2.439E-05
      -0.300        -80100.000            -2.090E-05
      -0.250        -66750.000            -1.742E-05
      -0.200        -53400.000            -1.394E-05
      -0.150        -40050.000            -1.045E-05
      -0.100        -26700.000            -6.968E-06
      -0.050        -13350.000            -3.484E-06
      -0.000            -0.000            -7.736E-21
       0.050         13350.000             3.484E-06
       0.100         26700.000             6.968E-06
       0.150         40050.000             1.045E-05
       0.200         53400.000             1.394E-05
       0.250         66750.000             1.742E-05
       0.300         80100.000             2.090E-05
       0.350         93450.000             2.439E-05
       0.400        106800.000             2.787E-05
       0.450        120150.000             3.136E-05
 Done!

real	18m22.618s
user	473m4.832s
sys	21m58.567s
(base) mjgp@alpha:~/ExamplePDBs/7LQ5$ 
